// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OperatorPlatform.Data;

namespace OperatorPlatform.Data.Migrations
{
    [DbContext(typeof(OperatorPlatformDbContext))]
    [Migration("20210919072928_Add_CreatedOn_and_UpdatedOn")]
    partial class Add_CreatedOn_and_UpdatedOn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OperatorPlatform.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ExchangeBarId")
                        .HasColumnType("int");

                    b.Property<int>("IndicatorId")
                        .HasColumnType("int");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.Property<int>("TimeFrame")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IndicatorId");

                    b.HasIndex("TickerId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BollingerLowerBandFirst")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("BollingerLowerBandSecond")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("BollingerLowerBandThird")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("BollingerUpperBandFirst")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("BollingerUpperBandSecond")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("BollingerUpperBandThird")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("Close")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExchangeBarId")
                        .HasColumnType("int");

                    b.Property<decimal>("High")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("Low")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("Open")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeFrame")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TickerId");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Indicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BarsToLookBack")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Indicators");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AlertId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<int>("BarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Leverage")
                        .HasColumnType("int");

                    b.Property<int>("OperationStatus")
                        .HasColumnType("int");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("StopLoss")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<decimal>("StopProfit")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasPrecision(17, 8)
                        .HasColumnType("decimal(17,8)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.HasIndex("BarId");

                    b.HasIndex("TickerId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Ticker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ExchangeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeId");

                    b.ToTable("Tickers");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Alert", b =>
                {
                    b.HasOne("OperatorPlatform.Models.Indicator", "Indicator")
                        .WithMany("Alerts")
                        .HasForeignKey("IndicatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OperatorPlatform.Models.Ticker", "Ticker")
                        .WithMany("Alerts")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Indicator");

                    b.Navigation("Ticker");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Bar", b =>
                {
                    b.HasOne("OperatorPlatform.Models.Ticker", "Ticker")
                        .WithMany("Bars")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ticker");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Operation", b =>
                {
                    b.HasOne("OperatorPlatform.Models.Alert", "Alert")
                        .WithMany("Operations")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OperatorPlatform.Models.Bar", "Bar")
                        .WithMany("Operations")
                        .HasForeignKey("BarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OperatorPlatform.Models.Ticker", "Ticker")
                        .WithMany("Operations")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Alert");

                    b.Navigation("Bar");

                    b.Navigation("Ticker");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Ticker", b =>
                {
                    b.HasOne("OperatorPlatform.Models.Exchange", "Exchange")
                        .WithMany("Tickers")
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Exchange");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Alert", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Bar", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Exchange", b =>
                {
                    b.Navigation("Tickers");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Indicator", b =>
                {
                    b.Navigation("Alerts");
                });

            modelBuilder.Entity("OperatorPlatform.Models.Ticker", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Bars");

                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
